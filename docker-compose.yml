version: "3.9"

# Common configuration variables
x-baseservice: &baseservice
  extends:
    file: compose-common.yml
    service: baseservice

x-grpc-helthcheck: &grpc-healthcheck
  interval: 10s
  retries: 0
  test: /bin/grpc_health_probe -addr=:7000 
  timeout: 1s

# Network configuration
networks:
  transcoorditor:
    external: true
    name: transcoorditor_default

# Services configuration
services:

  redis-cart:
    image: redis:alpine
    container_name: redis-cart
    mem_limit: 200Mi
    ports:
      - "6379:6379"
    volumes:
      - ./data:/data

  paymentservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/paymentservice
    container_name: paymentservice
    environment:
      - PORT=7000
    mem_limit: 64Mi
    ports:
      - "7000"
    stop_signal: SIGTERM

  shippingservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/shippingservice
    container_name: shippingservice
    environment:
      - PORT=7000
    mem_limit: 64Mi
    ports:
      - "7000"

  emailservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/emailservice
    container_name: emailservice
    environment:
      - PORT=7000
    mem_limit: 64Mi
    ports:
      - "7000"
    stop_signal: SIGTERM

  cartservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/cartservice/src
    container_name: cartservice
    environment:
      - PORT=7000
      - REDIS_ADDR=redis-cart:6379
    mem_limit: 64Mi
    ports:
      - "7000"
    stop_signal: SIGTERM

  currencyservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/currencyservice
    container_name: currencyservice
    environment:
      - PORT=7000
    mem_limit: 64Mi
    ports:
      - "7000"
    stop_signal: SIGTERM

  productcatalogservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/productcatalogservice
    container_name: productcatalogservice
    environment:
      - PORT=7000
    mem_limit: 64Mi
    ports:
      - "7000"
    stop_signal: SIGTERM

  recommendationservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/recommendationservice
    container_name: recommendationservice
    environment:
      - PORT=7000
    mem_limit: 220Mi
    ports:
      - "7000"
    stop_signal: SIGTERM

  adservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/adservice
    container_name: adservice
    environment:
      - PORT=7000
    mem_limit: 180Mi
    ports:
      - "7000"
    stop_signal: SIGTERM

  checkoutservice:
    <<: *baseservice
    healthcheck: *grpc-healthcheck
    build: ./src/checkoutservice
    container_name: checkoutservice
    environment:
      - PORT=7000
    mem_limit: 64Mi
    ports:
      - "7000"

  frontend:
    <<: *baseservice
    build: ./src/frontend
    container_name: frontend
    environment:
      - PORT=8080
    mem_limit: 64Mi
    ports:
      - "8080:8080"
  # loadgenerator:
  #   <<: *baseservice
  #   build: ./src/loadgenerator
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: always
  #   environment:
  #     - FRONTEND_ADDR=frontend:80
  #     - USERS=10
  #   mem_limit: 256Mi
  #   stop_signal: SIGTERM
